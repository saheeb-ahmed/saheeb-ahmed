version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: vehicle_tracker_mongodb_prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: vehicle_tracker
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/backup:/backup
    networks:
      - vehicle_tracker_network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: vehicle_tracker_redis_prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - vehicle_tracker_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  backend:
    build: .
    container_name: vehicle_tracker_backend_prod
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/vehicle_tracker?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - ENVIRONMENT=production
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongodb
      - redis
    networks:
      - vehicle_tracker_network
    volumes:
      - ./logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      replicas: 2

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: vehicle_tracker_frontend_prod
    restart: unless-stopped
    networks:
      - vehicle_tracker_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  nginx:
    image: nginx:alpine
    container_name: vehicle_tracker_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - vehicle_tracker_network

volumes:
  mongodb_data:
  redis_data:

networks:
  vehicle_tracker_network:
    driver: bridge